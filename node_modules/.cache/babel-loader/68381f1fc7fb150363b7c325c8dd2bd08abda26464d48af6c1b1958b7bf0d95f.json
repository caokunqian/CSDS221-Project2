{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Import TaskDialog component\nimport PopUpForm from \"./TaskDialog.vue\";\nexport default {\n  name: \"ToDo\",\n  components: {\n    PopUpForm\n  },\n  data() {\n    return {\n      isVisible: false,\n      isAdding: true,\n      taskIndex: null,\n      description: \"\",\n      deadline: \"\",\n      priority: \"low\",\n      tasks: []\n    };\n  },\n  methods: {\n    toggleForm(isAdding) {\n      this.isAdding = isAdding;\n      this.isVisible = true;\n    },\n    closeForm() {\n      this.isVisible = false;\n    },\n    addTask(title, description, deadline, priority) {\n      this.tasks.push({\n        title: title,\n        description: description,\n        deadline: deadline,\n        priority: priority,\n        isComplete: false\n      });\n      this.$toasted.success(\"Task has been added\");\n    },\n    updateTaskForm(index) {\n      this.taskIndex = index;\n      this.description = this.tasks[this.taskIndex].description;\n      this.deadline = this.tasks[this.taskIndex].deadline;\n      this.priority = this.tasks[this.taskIndex].priority;\n      this.toggleForm(false);\n    },\n    updateTask(description, deadline, priority) {\n      this.tasks[this.taskIndex].description = description;\n      this.tasks[this.taskIndex].deadline = deadline;\n      this.tasks[this.taskIndex].priority = priority;\n      this.$toasted.success(\"Task has been updated\");\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n      this.$toasted.success(\"Task has been deleted\");\n    }\n  }\n};","map":{"version":3,"mappings":";AAsEA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACAC;QACAR;QACAC;QACAC;QACAO;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;AACA","names":["name","components","PopUpForm","data","isVisible","isAdding","taskIndex","description","deadline","priority","tasks","methods","toggleForm","closeForm","addTask","title","isComplete","updateTaskForm","updateTask","deleteTask"],"sourceRoot":"src/components","sources":["toDoApp.vue"],"sourcesContent":["<template>\n<v-app>\n<v-card>\n      <!-- The title -->\n      <v-card-title class=\"headline primary justify-center\" primary-title style=\"color: white;\">\n        <v-spacer>\n          <span class=\"fa-solid fa-bars\"></span> FRAMEWORKS\n        </v-spacer>\n        <v-btn color=\"primary\" large @click=\"addTaskForm\">\n          <span class=\"fa-solid fa-circle-plus\"></span> ADD\n        </v-btn>\n      </v-card-title>\n\n      \n      <!--Body part --> ->\n            <v-simple-table>\n                <template v-slot:default>\n                    <thead>\n                    <tr>\n                        <th class=\"column text-center\"> Title </th>\n                        <th class=\"column text-center\"> Description </th>\n                        <th class=\"column text-center\"> Deadline </th>\n                        <th class=\"column text-center\"> Priority </th>\n                        <th class=\"column text-center\"> Is Complete </th>\n                        <th class=\"column text-center\"> Action </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(task,index) in tasks\" :key=\"index\">\n                            <td class=\"text-center\">{{task.title}}</td>\n                            <td class=\"text-center\">{{task.description}}</td>\n                            <td class=\"text-center\">{{task.deadline}}</td>\n                            <td class=\"text-center\">{{task.priority}}</td>\n                            <td>\n                                <v-layout justify-center>\n                                    <v-checkbox v-model=\"tasks[index].isComplete\"/>\n                                </v-layout>\n                            </td>\n                            <td>\n                <v-layout justify-center v-if=\"!tasks[index].isComplete\">\n                  <v-btn class=\"button mt-2\" color=\"primary\" large @click=\"updateTaskForm(index)\">\n                    <span class=\"fa-solid fa-pen-to-square\"></span>UPDATE\n                  </v-btn>\n                </v-layout>\n                <v-layout justify-center>\n                  <v-btn class=\"button mb-2\" color=\"error\" large @click=\"deleteTask(index)\">\n                    <span class=\"fa-solid fa-circle-xmark\"></span>DELETE\n                  </v-btn>\n                </v-layout>\n                            </td>\n                        </tr>\n                    </tbody>\n                </template>\n            </v-simple-table>\n</v-card>\n    <PopUpForm\n      v-show=\"Visible\"\n      :Visible=\"Visible\"\n      :Added=\"Added\"\n      :pastDescription=\"description\"\n      :pastdate=\"deadline\"\n      :pastPriority=\"priority\"\n      :tasks=\"tasks\"\n      @addTask=\"addTask\"\n      @updateTask=\"updateTask\"\n      @close=\"closeForm\"\n    />\n  </v-app>\n</template>\n<script>\n// Import TaskDialog component\nimport PopUpForm from \"./TaskDialog.vue\";\n\nexport default {\n  name: \"ToDo\",\n  components: {\n    PopUpForm,\n  },\n  data() {\n    return {\n      isVisible: false,\n      isAdding: true,\n      taskIndex: null,\n      description: \"\",\n      deadline: \"\",\n      priority: \"low\",\n      tasks: [],\n    };\n  },\n  methods: {\n    toggleForm(isAdding) {\n      this.isAdding = isAdding;\n      this.isVisible = true;\n    },\n    closeForm() {\n      this.isVisible = false;\n    },\n    addTask(title, description, deadline, priority) {\n      this.tasks.push({\n        title: title,\n        description: description,\n        deadline: deadline,\n        priority: priority,\n        isComplete: false,\n      });\n      this.$toasted.success(\"Task has been added\");\n    },\n    updateTaskForm(index) {\n      this.taskIndex = index;\n      this.description = this.tasks[this.taskIndex].description;\n      this.deadline = this.tasks[this.taskIndex].deadline;\n      this.priority = this.tasks[this.taskIndex].priority;\n      this.toggleForm(false);\n    },\n    updateTask(description, deadline, priority) {\n      this.tasks[this.taskIndex].description = description;\n      this.tasks[this.taskIndex].deadline = deadline;\n      this.tasks[this.taskIndex].priority = priority;\n      this.$toasted.success(\"Task has been updated\");\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n      this.$toasted.success(\"Task has been deleted\");\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}