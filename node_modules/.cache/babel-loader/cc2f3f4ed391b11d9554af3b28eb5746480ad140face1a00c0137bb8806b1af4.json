{"ast":null,"code":"export default {\n  name: 'PopUpForm',\n  props: {\n    Visible: Boolean,\n    Added: Boolean,\n    pastDescription: String,\n    pastdate: String,\n    pastPriority: String,\n    tasks: Array\n  },\n  watch: {\n    Visible(newVal) {\n      this.$refs.form.resetValidation();\n      if (newVal && !this.Added) {\n        this.getParentData();\n      }\n    },\n    date() {\n      this.dateFormatted = this.formatDate(this.date);\n    }\n  },\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.date);\n    }\n  },\n  methods: {\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split('-');\n      return `${month}/${day}/${year}`;\n    },\n    parseDate(date) {\n      if (!date) return null;\n      const [month, day, year] = date.split('/');\n      return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    },\n    addTask() {\n      if (this.$refs.form.validate()) {\n        this.$emit(\"addTask\", this.title, this.description, this.formatDate(this.date), this.priority);\n        this.close();\n      }\n    },\n    updateTask() {\n      if (this.$refs.form.validate()) {\n        this.$emit(\"updateTask\", this.description, this.formatDate(this.date), this.priority);\n        this.close();\n      }\n    },\n    close() {\n      this.title = '';\n      this.description = '';\n      this.date = '';\n      this.priority = 'low';\n      this.$refs.form.resetValidation();\n      this.$emit('close');\n    },\n    getParentData() {\n      this.description = this.pastDescription;\n      this.date = this.parseDate(this.pastdate);\n      this.priority = this.pastPriority;\n      console.log(this.description, this.pastdate, this.pastPriority);\n    },\n    checkValidTitle(title) {\n      return !this.tasks.filter(e => e.title === title).length > 0;\n    }\n  },\n  data() {\n    return {\n      title: '',\n      description: '',\n      priority: 'low',\n      date: '',\n      titleRules: [v => !!v || 'Title is required', v => this.checkValidTitle(v) || 'Title must be Unique']\n    };\n  }\n};","map":{"version":3,"mappings":"AA6EA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAN;MACA;MACA;QACA;MACA;IACA;IACAO;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACAC;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAf;MACAgB,aACAC,iCACAA;IAEA;EACA;AACA","names":["name","props","Visible","Added","pastDescription","pastdate","pastPriority","tasks","watch","date","computed","computedDateFormatted","methods","formatDate","parseDate","addTask","updateTask","close","getParentData","console","checkValidTitle","data","title","description","priority","titleRules","v"],"sourceRoot":"src/components","sources":["PopUpForm.vue"],"sourcesContent":["<template>\n    <div class=\"modal-backdrop\">\n        <div class=\"modal\">\n            <v-card>\n                <v-card-title class='headline primary justify-center'\n                    primary-title style='color: white'>\n                    <div v-if=\"Added\" key=\"add\">\n                        <span class=\"fa-solid fa-circle-plus\"/> Add Task\n                    </div>\n                    <div v-else key=\"update\">\n                        <span class=\"fa-solid fa-pen-to-square\"/> Update Task\n                    </div>\n                </v-card-title>\n                <v-form ref=\"form\" lazy-validation>\n                    <v-layout v-if=\"Added\" justify-center class=\"elements mx-5 mb-0 mt-7\">\n                        <v-text-field label=\"Title\" outlined v-model=\"title\" \n                            :rules=\"titleRules\" required />\n                    </v-layout>\n                    <v-layout justify-center class=\"elements mx-5 my-2\">\n                        <v-text-field label=\"Description\" outlined v-model=\"description\"\n                            :rules=\"[v => !!v || 'Description is required']\" required />\n                    </v-layout>\n                    <v-layout justify-center class=\"elements mx-5 my-0\">\n                    <v-menu\n                        :close-on-content-click=\"false\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"auto\"\n                        >\n                    <template v-slot:activator=\"{ on, attrs }\">\n                        <v-text-field\n                        v-model=\"computedDateFormatted\"\n                        label=\"Deadline\"\n                        append-icon=\"mdi-calendar\"\n                        readonly\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        outlined\n                        ></v-text-field>\n                    </template>\n                    <v-date-picker\n                        v-model=\"date\"\n                        no-title\n                        @input=\"menu2 = false\"\n                    ></v-date-picker>\n                    </v-menu>\n                    </v-layout>\n                    <v-radio-group label=\"Priority\" class=\"elements mx-5 my-0\" v-model=\"priority\">\n                        <v-layout align-start row d-flex justify-space-between>\n                            <v-radio label=\"Low\" value=\"low\"/>\n                            <v-radio label=\"Med\" value=\"med\"/>\n                            <v-radio label=\"High\" value=\"high\"/>\n                        </v-layout>\n                    </v-radio-group>\n                    <v-layout justify-end class=\"elements mx-2 mt-0 mb-2\">\n                        <div v-if=\"Added\" key=\"add1\">\n                            <v-btn color=\"primary\" elevation=\"2\" @click=\"addTask\" class=\"mr-2\">\n                                <i class=\"fa-solid fa-circle-plus\"></i> ADD\n                            </v-btn>\n                        </div>\n                        <div v-else key=\"update1\">\n                            <v-btn color=\"primary\" elevation=\"2\" @click=\"updateTask\" class=\"mr-2\">\n                                <i class=\"fa-solid fa-pen-to-square\"></i> EDIT\n                            </v-btn>\n                        </div>\n                        <v-btn color=\"error\" elevation=\"2\" @click=\"close\">\n                            <i class=\"fa-solid fa-ban\"></i> CANCEL\n                        </v-btn>\n                    </v-layout>\n                </v-form>\n            </v-card>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default{\n    name:'PopUpForm',\n    props:{\n        Visible:Boolean,\n        Added:Boolean,\n        pastDescription:String,\n        pastdate:String,\n        pastPriority:String,\n        tasks:Array,\n    },\n    watch:{\n        Visible(newVal){\n            this.$refs.form.resetValidation();\n            if(newVal && !this.Added){\n                this.getParentData();\n            }\n        },\n        date () {\n            this.dateFormatted = this.formatDate(this.date)\n        },\n    },\n    computed:{\n        computedDateFormatted () {\n            return this.formatDate(this.date)\n        },\n    },\n    methods:{\n        formatDate (date) {\n            if (!date) return null\n            const [year, month, day] = date.split('-')\n            return `${month}/${day}/${year}`\n        },\n        parseDate (date) {\n            if (!date) return null\n            const [month, day, year] = date.split('/')\n            return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n        },\n        addTask(){\n            if(this.$refs.form.validate()){\n                this.$emit(\"addTask\", this.title, this.description, this.formatDate(this.date), this.priority);\n                this.close();\n            }\n        },\n        updateTask(){\n            if(this.$refs.form.validate()){\n                this.$emit(\"updateTask\", this.description, this.formatDate(this.date), this.priority);\n                this.close();\n            }\n        },\n        close(){\n            this.title='';\n            this.description='';\n            this.date='';\n            this.priority='low';\n            this.$refs.form.resetValidation();\n            this.$emit('close');\n        },\n        getParentData(){\n            this.description=this.pastDescription;\n            this.date=this.parseDate(this.pastdate);\n            this.priority=this.pastPriority;\n            console.log(this.description,this.pastdate,this.pastPriority)\n        },\n        checkValidTitle(title){\n            return !this.tasks.filter(e=>e.title===title).length>0\n        }\n    },\n    data(){\n        return{\n            title: '',\n            description: '',\n            priority: 'low',\n            date: '',\n            titleRules: [\n                v=>!!v||'Title is required',\n                v=>this.checkValidTitle(v)||'Title must be Unique',\n            ],\n        }\n    }\n};\n</script>\n<style>\n  .overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color:black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .dialog {\n    background-color: white;\n    box-shadow: 4px 4px 12px 1px rgba(0, 0, 0, 0.15);\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}